<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>Single Team Game</title>

    <meta name="keywords" content="SCRUM, Agile, Kanban, Project Management, JavaScript, Ones Game"/>
    <meta name="description" content="Free JavaScript Games to learn and practice Agile, SCRUM and KanBan concepts" />

    <link href="css/default.css" rel="stylesheet" />
    <script src="../js/jquery-1.8.3.js" type="text/javascript"></script>
    <script src="../js/jquery-ui-1.9.2.custom.js" type="text/javascript"></script>
    <script src="js/model.js" type="text/javascript"></script>
    <script src="js/utility.js" type="text/javascript"></script>
    
    <script type="text/javascript">
        var onesGame = null;
        var updateElement = "";
        var newGame = true;
        var oneDice = 0;

        $(document).ready(function () {           

            //$('.roller').attr('disabled', 'disabled');
            $('#roll2').click(function () {
                //alert("roll2 clicked " + newGame);
                newGame = true;
               
                // alert("roll2 clicked " + newGame);
                $("#dice").html("<br/>");
                $("#team_table").html("<br/>");
                $("#finishedTasks #finished_table").html("<br/>");
                $("#velocityTasks #velocity_table").html("<br/>");

                $('.roller').removeAttr('disabled');
                oneDice = 0;
               
            });

            $('button.roller').click(function (event) {

                // ID of the parent div surrounding the button
                // which generated event
                var parentID = $(this).parent().attr("id");

                // Update the tag with dice 
                // div with id #team_1 containing p with id #dice
                var updateElement = "#" + parentID + " #dice";
                //alert(updateElement);
                updateDice(updateElement, dieRoll(5));

                updateElement = "#" + parentID + " #team_table";

                //alert("roll1 clicked " + newGame);
                if (newGame == true) {
                    createGame(updateElement, 1);
                    newGame = false;
                }
                if (oneDice > 0) {
                    $('.roller').attr('disabled', 'disabled');
                }
            });

            // This is key to make dynamically created elements draggable
            $('img.one').live('mouseenter', function () {
                var parentID = $(this).parent().parent().attr("id");
                //alert(parentID);
                var $this = $(this);
                if (!$this.is(':data(draggable)')) {
                    $this.draggable({
                        revert: "invalid",
                        revertDuration: 0,
                        helper: 'original',
                        opacity: 0.75,
                        containment: "#" + parentID
                    });
                }

            });
        });

        function dieRoll(n) {
            var result = 0;
            var diceArray = new Array();
            for (i = 0; i < n; i++) {
                value = Math.floor(Math.random() * 6) + 1;
                diceArray[i] = value;
            }
            return diceArray;
        }

        function updateDice(team, diceArray) {
            var htmlString = "<br/>";

            /* */
            for (i = 0; i < diceArray.length; i++) {
                //alert(i + "  -->  " + diceArray[i]);
                if (diceArray[i] == 1) {
                    htmlString = htmlString + "<img src='images/dice-" + diceArray[i] + "-th-W.png' alt='Smiley face' height='32' width='32' class='one'/>  ";
                    oneDice = oneDice + 1;
                } else {
                    htmlString = htmlString + "<img src='images/dice-" + diceArray[i] + "-th.png' alt='Smiley face' height='32' width='32'/>  ";
                }
            }
            $(team).html(htmlString + "<br/>" /*+ tempTeam.Visual()*/);
        }

        function createGame(team, numberOfTeams) {
            onesGame = new OnesGame();
            for (i = 0; i < numberOfTeams; i++) {
                var tempTeam = createTeam(Math.floor(Math.random() * 10) + 1);
                onesGame.AddTeam(tempTeam);

                var randomBacklog = Math.floor(Math.random() * 6) + 1;
                for (j = 0; j < randomBacklog; j++) {
                    tempTeam.AddTask(createTask());
                }
            }
            //alert(game.Teams().length)
            //alert(game.Visual());
            $(team).html(onesGame.Visual());
            updateDroppable(team);
        }

        function createTeam(indexToGenerateTeamColour) {
            var tempTeam = new Team("team_" + i, getTeamColour(indexToGenerateTeamColour), Math.floor(Math.random() * 9) + 1, Math.floor(Math.random() * 6) + 1, true, Math.floor(Math.random() * 6) + 1);
            return tempTeam;
        }

        function createTask() {
            var tempTask = new Task(Math.floor(Math.random() * 5) + 1);
            return tempTask;
        }

        function updateDroppable(team) {
            //alert(team);
            var droppableObjects = $('table').find('td.droppable').droppable({
                hoverClass: "expandTD",

                drop: function (event, ui) {
                    oneDice = oneDice - 1;
                    var cellIDSplitArray = $(this).attr("id").split("_");
                    //alert(cellIDSplitArray[1] + "    " + cellIDSplitArray[2]);
                    onesGame.UpdateTeamTask(cellIDSplitArray[1] + "_" + cellIDSplitArray[2] , cellIDSplitArray[3]);
                    $(team).html(onesGame.Visual());
                    //alert(onesGame.Visual());
                    $(ui.draggable).remove();
                    updateDroppable(team);
                    $("#finishedTasks #finished_table").html(onesGame.FinishedTasks());
                    $("#velocityTasks #velocity_table").html(onesGame.Velocity());

                    onesGame.LastTeamActivityCounter();

                    if (oneDice < 1) {
                        $('.roller').removeAttr('disabled');
                    }                     
                }               
            });           
        }
        
    </script>
</head>

<body>
    <h1 style=" text-align:center;">Ones Game</h1>
    <h4><a href="index.html">Back to Main Page</a></h4>
    <button id="roll2" type="button" class="round button">
        New Game</button>
    <table>
        <tr>
            <th>
                Game Snapshot
            </th>
            <th>
                Finished Tasks
            </th>
            <th>
                Velocity
            </th>
        </tr>
        <tr>
            <td>
                <div id="team_1">
                    <button id="roll" type="button" class="roller round button">
                        Roll Dice</button>
                    <p id="dice"/>
                    <p id="team_table"/>
                </div>
            </td>
            <td>
                <div id="finishedTasks">
                    <p id="finished_table"/>
                </div>
            </td>
            <td>
                <div id="velocityTasks">
                    <p id="velocity_table"/>
                </div>
            </td>
        </tr>
    </table>

    <h4>Ones Game</h4>
This is the first game of the series. Rules of game are very simple:
<ol>
<li>Start a new game by clicking a button “New Game” on top left corner.</li>
<li>Each team will have a set of dices.</li>
<li>Each team will have random number of tasks in the backlog.</li>
<li>Each task will take random number of work units to finish.</li>
<li>The task with number 5 means it can be finished in 5 units of work.</li>
<li>Tasks will move from “Backlog” to “Work in Progress” to “Done” state.</li>
<li>Each team will roll dices by clicking “Roll Dice” button.</li>
<li>The dice with number 1, is distinct from other dices in colour.</li>
<li>The dice with number 1, represents one unit of work and is draggable within its team.</li>
<li>Drag the dice with number 1, to any of the task and notice changes.</li>
<li>If there is no dice with number 1, then click “Roll Dice” button.</li>
<li>The “Roll Dice” button is disabled if there are one or more dices with number 1.</li>
<li>The “Roll Dice” button is automatically enabled, once all dices with number 1 are dragged to tasks.</li>
<li>Once the task is in Done column player will need to use dice with number 1 to push it to the backlog of the next team or in the Finished column (in case of last team).</li>
<li>As a player your job is to finish maximum tasks possible and keep the consistent velocity.</li>
</ol>

<br /><br /><br />
Any new feature or improvement requests or bugs report or suggestions regarding these game can be made on following email address

<pre style="color: red;"> aasif dot akram at hotmail dot co dot uk</pre>. 
        <!-- Start of StatCounter Code for Default Guide -->
    <script type="text/javascript">
        var sc_project = 8528192;
        var sc_invisible = 1;
        var sc_security = "98ca0992";
        var scJsHost = (("https:" == document.location.protocol) ? "https://secure." : "http://www.");
        document.write("<sc" + "ript type='text/javascript' src='" + scJsHost + "statcounter.com/counter/counter.js'></" + "script>");
    </script>
    <noscript>
        <div class="statcounter">
            <a title="web statistics" href="http://statcounter.com/" target="_blank">
                <img class="statcounter" src="https://c.statcounter.com/8528192/0/98ca0992/1/" alt="web statistics"/></a></div>
    </noscript>
    <!-- End of StatCounter Code for Default Guide -->
</body>
</html>
